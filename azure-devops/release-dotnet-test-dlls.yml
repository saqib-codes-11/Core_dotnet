trigger: none
pr: none

name: 1.0$(Rev:.r)

variables:
  - name: Build.Configuration
    value: Release
    
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-18.04

    steps:
    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Restore'
      inputs:
        command: restore
        projects: '**/*.sln'
    - task: DotNetCoreCLI@2
      displayName: 'Dotnet Publish'
      inputs:
        command: publish
        publishWebProjects: false
        projects: |
           **/*.sln
        
        arguments: '--no-restore --configuration $(Build.Configuration)'
        zipAfterPublish: false  

    - template: templates/run-tests-from-projects.yml
    - powershell: 'Get-ChildItem -Recurse'
      workingDirectory: src
      displayName: 'PowerShell Script'
    - template: templates/run-dotnet-test-unit-test-dlls.yml
    - template: templates/run-dotnet-test-integration-test-dlls.yml
    - template: templates/run-dotnet-test-acceptance-test-dlls.yml

    - powershell: |
        docker build -f azure-devops/Dockerfile src -t yeha-api:candidate

      failOnStderr: true
      displayName: 'Docker: Build Container'

    # Start the Container
    # Wait for the Container to be ready
    # Set the Test Execution Context to CI
    # Run the Acceptance Tests (from DLLs)
    - powershell: |
        docker run -d -p 5001:80 yeha-api:candidate    
      
      failOnStderr: true
      displayName: 'Docker: Run Docker Container'
    - task: PowerShell@2
      displayName: 'Wait For Container'
      inputs:
        targetType: filePath
        filePath: './azure-devops/wait-until-uri-is-ready.ps1'
        arguments: '-TimeoutInSeconds 60 -Uri http://localhost:5001/api/diagnostics/ready -ExpectStatusCode 200 -Verbose'
        failOnStderr: true

    - bash: |
        echo "##vso[task.setvariable variable=YEHA_TEST_EXECUTION_CONTEXT]CI"

    - powershell: |
        dotnet test $(System.DefaultWorkingDirectory)/src/Yeha.Api.AcceptanceTests/bin/$(Build.Configuration)/netcoreapp3.1/publish/Yeha.Api.AcceptanceTests.dll --logger:"trx;LogFileName=Container-Acceptance.trx"

    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/Container-Acceptance.trx'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: VSTest
        testResultsFiles: '**/Container-Acceptance.trx'
        failTaskOnFailedTests: true
        testRunTitle: 'Docker: Container Tests'
